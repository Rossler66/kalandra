<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * Description of db * * @author RobertRossler */class db {    //put your code here    private static $db_pri;    private static $db_err;    private static $db_eff;    //Připojí se k databází, pokud není spojení navázáno    public static function dbs() {//        $sou = fopen('log.txt', 'w');//        fwrite($sou, "START\r\n\r\n");//        fclose($sou);        if (!self::$db_pri) {            self::$db_pri = new mysqli("localhost", "bob", "heslo1234", "kalandra");  //localhost//            self::$db_pri = new mysqli("sql13.pipni.cz", "drpl.kalandramemory.cz", "kalan8848", "drpl_kalandramemory_cz");  //ostrá            if (mysqli_connect_error()) {                //                vystup::zprava("Chyba připojení k databázi");                self::$db_eff = "Připojení k databázi";            } else                self::$db_pri->set_charset("utf8");            self::$db_err = null;        }        return self::$db_pri;    }    //Zahájí transakci    public static function start() {        self::$db_err = null;        self::$db_pri->autocommit(false);        self::$db_pri->begin_transaction(MYSQLI_TRANS_START_READ_WRITE); //begin_transaction(MYSQLI_TRANS_START_READ_ONLY);    }    //Ukončí transakci    // pokud je $akc=0, uzavře změny, pokud je 1 odvolá změny, pokud došlo od strartu k chybě odvolá změny    //Vrací true při uzavření, false při odvolání    public static function stop($akc = 0) {        if (self::$db_err == null && $akc >= 0) {            self::$db_pri->commit();            return true;        } else {            self::$db_pri->rollback();            return false;        }    }    //Provede SQL příkaz    // vrací výsledek    public static function query($asQ) {        $sou = fopen('log.txt', 'a');        fwrite($sou, "\r\n" . $asQ . "\r\n\r\n");        fclose($sou);        self::dbs();        $res = self::$db_pri->query($asQ);        if (self::$db_pri->error) {            self::$db_err = self::$db_pri->error;            $sou = fopen('log.txt', 'a');            fwrite($sou, "error\r\n" . $asQ . "\r\n\r\n");            fclose($sou);        }else{        }        return $res;    }    public static function error() {        return self::$db_pri->error;    }    public static            function insTab($table) {        @$asSQL = "INSERT INTO " . $table . " (id) values (0)";        self::dbs();        self::$db_pri->query($asSQL);        $id = self::$db_pri->insert_id;        return $id;    }    //Upraví SQL příkaz, aby jej nebylo možné zneužít    public static function escape($text) {        self::dbs();        if (is_array($text)) {            $ret = array();            foreach ($text as $item) {                $ret[] = self::$db_pri->real_escape_string($item);            }            return $ret;        }        return self::$db_pri->real_escape_string($text);    }    //Vrací ID pokud byl SQL příkaz INSERT    public static function insertId() {        return self::$db_pri->insert_id;    }    //Vrátí počet řádků    public static function pocet() {        return self::$db_pri->num_rows;    }    public static function ovlivneno() {        return self::$db_pri->affected_rows;    }    public static function databaze() {        $result = self::$db_pri->query("SELECT DATABASE()");        $row = $result->fetch_row();        $dbname = $row[0];        $result->close();        if ($dbname == "alkaliscz1") {            return "PŮVODNÍ";        }        if ($dbname == "f112395") {            return "CVIČNÁ";        }        if ($dbname == "f116857") {            return "OSTRÁ";        }    }}